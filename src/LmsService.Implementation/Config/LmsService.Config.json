{
  "LmsServiceSettings": {
    "ExampleSetting": "Value from config-file",
    "AutocontrolFilesPath": "C:\\Temp\\AutocontrolFiles",
    "DatabaseConnectionString": "Server=ESBSJUM50\\PLANTIT;Database=dbIdc;User Id=sa; Password=ProAdmin777;Connection Timeout=300000"
  },

  "Logging": {
    ////##  Determines, whether the default property "SourceContext" will be added automatically to a log entry.
    ////##  Possible values: Never, Always, WhenDebuggerIsAttached
    //"AutoIncludeSourceCodeContext": "Always",


    ////##  The culture used for loading text templates for logging.
    //"LogCulture": "de",


    ////##  Determines whether log messages will automatically be written to a console output
    ////##  Possible values: Never, Always, WhenDebuggerIsAttached
    //"LogToConsole": "WhenDebuggerIsAttached",


    ////##  The minimum log event level for any message to be written (no matter which output sink).
    ////##  Possible values: Verbose, Debug, Information, Warning, Error, Fatal
    //"MinimumLogLevel": "Information",

    ////##  The minimum log event level for message that are created by classes from the System namespace.
    ////##  Possible values: Verbose, Debug, Information, Warning, Error, Fatal
    //"MinimumLogLevelForSystemEvents": "Warning",


    ////##  The minimum log event level for message that are created by classes from the Microsoft namespace.
    ////##  Possible values: Verbose, Debug, Information, Warning, Error, Fatal
    //"MinimumLogLevelForMicrosoftEvents": "Warning",


    ////##  Global path for log files that will be used as prefix whenever a path setting of a log file is not a rooted path.
    ////##  Defaults to  %ProjectDir%\{Moduleidentifier}\{ModuleServiceidentifier}
    ////##  Can contain the following placeholders:
    ////##  {Moduleidentifier}   -> Will be replaced by the Moduleidentifier of the service
    ////##  {Date}       -> Will be replaced by the current date
    //"LogPath": "C:\\Temp",

    ////##  When serializing object-structures, this is the maximum depth which will be navigated.
    ////##  Default is 10.
    //"DestructuringMaximumDepth": 10,

    ////##  When serializing object-structures, this is the maximum amount of entities per enumerable which will be navigated.
    ////##  Default is 3.
    ////##  Example: If an enumerable (e.g. list, array, collection) contains 1000 elements and below setting is set to 3, only
    ////##  3 of the 1000 elements will be serialized.
    //"DestructuringMaximumCollectionCount": 3,

    ////##  When serializing object-structures, this is the maximum length of strings which will be output in the log.
    ////##  Default is 500.
    //"DestructuringMaximumStringLength": 5,

    ////##  Configuration data for the trace output sink
    "TracingConfiguration": {
    
      ////##  The minimum log event level for any message to be written to this file
      ////##  Possible values: Verbose, Debug, Information, Warning, Error, Fatal
      //"MinimumLogLevel": "Information",
    
    
      ////##  Path to the log file. If this path is not rooted, the global log path will be used as prefix
      ////##  Can contain the following placeholders:
      ////##  {Moduleidentifier}   -> Will be replaced by the Moduleidentifier of the service
      ////##  {Date}       -> Will be replaced by the current date
      //"LogFileName": "trace_{Moduleidentifier}_{Date}.json",
    
    
      ////##  Determines whether to format the output in a JSON like style
      //"UseJsonFormatter": true,
    
    
      ////##  The template used for creating log entries when UseJsonFormatter is set to false
      //"LogTemplate": "{Timestamp:u} [{Level:u4}|{MessageId}] [{RequestId}] {SourceContext}{Message}{NewLine}{Exception}"
    },

    ////##  Configuration data for the log output sink
    "LoggingConfiguration": {
      
      ////##  The minimum log event level for any message to be written to this file
      ////##  Possible values: Verbose, Debug, Information, Warning, Error, Fatal
      //"MinimumLogLevel": "Information",
      
      
      ////##  Path to the log file. If this path is not rooted, the global log path will be used as prefix
      ////##  Can contain the following placeholders:
      ////##  {Moduleidentifier}   -> Will be replaced by the Moduleidentifier of the service
      ////##  {Date}       -> Will be replaced by the current date
      //"LogFileName": "log_{Moduleidentifier}_{Date}.json",
      
      
      ////##  Determines whether to format the output in a JSON like style
      //"UseJsonFormatter": true,
      
      
      ////##  The template used for creating log entries when UseJsonFormatter is set to false
      //"LogTemplate": "{Timestamp:u} [{Level:u4}|{MessageId}] [{RequestId}] {SourceContext}{Message}{NewLine}{Exception}"
    },

    ////##  Configuration data for the audit trail output sink
    "AuditTrailConfiguration": {
  
      ////##  The minimum log event level for any message to be written to this file
      ////##  Possible values: Verbose, Debug, Information, Warning, Error, Fatal
      //"MinimumLogLevel": "Information",
  
  
      ////##  Path to the log file. If this path is not rooted, the global log path will be used as prefix
      ////##  Can contain the following placeholders:
      ////##  {Moduleidentifier}   -> Will be replaced by the Moduleidentifier of the service
      ////##  {Date}       -> Will be replaced by the current date
      //"LogFileName": "{Moduleidentifier}\\audit_{Date}.json",
  
  
      ////##  Determines whether to format the output in a JSON like style
      //"UseJsonFormatter": true,
  
  
      ////##  The template used for creating log entries when UseJsonFormatter is set to false
      //"LogTemplate": "{Timestamp:u} [{Level:u4}|{MessageId}] [{RequestId}] {SourceContext}{Message}{NewLine}{Exception}"
    }
  }
}

 
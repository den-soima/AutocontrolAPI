<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AutocontrolService.Implementation</name>
    </assembly>
    <members>
        <member name="T:AutocontrolService.Implementation.BusinessLogic.GuestBook">
            <summary>
            Stores names of people.
            
            TODO for template-users: This is an example service for dependency injection and should be removed once understood!
            </summary>
        </member>
        <member name="M:AutocontrolService.Implementation.BusinessLogic.GuestBook.#ctor">
            <summary>
            Initializes the guest-book with all guests that where here before.
            </summary>
        </member>
        <member name="P:AutocontrolService.Implementation.BusinessLogic.GuestBook.Entries">
            <summary>
            Everyone who was a guest in this session.
            </summary>
        </member>
        <member name="M:AutocontrolService.Implementation.BusinessLogic.GuestBook.AddEntry(AutocontrolService.Implementation.BusinessLogic.GuestBookEntry)">
            <summary>
            Add an entry for a guest who just visited.
            </summary>
            <param name="entry">The new entry to add.</param>
        </member>
        <member name="M:AutocontrolService.Implementation.BusinessLogic.GuestBook.GetEntry(System.Int32)">
            <summary>
            Get a specific guest by index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:AutocontrolService.Implementation.BusinessLogic.GuestBook.DeleteEntry(System.Int32)">
            <summary>
            Delete a specific guest.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:AutocontrolService.Implementation.BusinessLogic.GuestBookEntry">
            <summary>
            An entry in a guestbook.
            </summary>
        </member>
        <member name="M:AutocontrolService.Implementation.BusinessLogic.GuestBookEntry.#ctor">
            <summary>
            Instanciation of a guest-book entry.
            IMPORTANT! Model classes must either have no constructor defined (that will mean they automatically receive a parameterless default-constructor at compile-time)
            OR if they have constructors with parameters, they always also need a parameterless constructor, like the one below. Otherwise automatic deserialisation cannot be done.
            The constructor below serves as a memorial to this fact and can be deleted, once the information here is understood.
            </summary>
        </member>
        <member name="P:AutocontrolService.Implementation.BusinessLogic.GuestBookEntry.Name">
            <summary>
            Name of the person.
            </summary>
        </member>
        <member name="P:AutocontrolService.Implementation.BusinessLogic.GuestBookEntry.Date">
            <summary>
            Date of entry.
            </summary>
        </member>
        <member name="T:AutocontrolService.Implementation.Config.AutocontrolServiceConfiguration">
            <summary>
            Method-object for loading configuration from different sources like static-files or the command-line.
            </summary>
        </member>
        <member name="P:AutocontrolService.Implementation.Config.AutocontrolServiceConfiguration.ModuleServiceIdentifier">
            <summary>
            The Service name of the application (The Logging infrastructure reads this)
            </summary>
        </member>
        <member name="P:AutocontrolService.Implementation.Config.AutocontrolServiceConfiguration.ModuleIdentifier">
            <summary>
            The Module name of the application (The Logging infrastructure reads this)
            </summary>
        </member>
        <member name="P:AutocontrolService.Implementation.Config.AutocontrolServiceConfiguration.ConfigSectionName">
            <summary>
            The section name, required for the configuration system to find the 
            correct object for the name of the object in the configuration file
            </summary>
        </member>
        <member name="M:AutocontrolService.Implementation.Config.AutocontrolServiceConfiguration.AddConfigurationFiles(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)">
            <summary>
            This adds the configuration-file of this Module-Service to the configuration system.
            </summary>
            <param name="configurationBuilder">Provides the collection of possible configuration sources.</param>
            <param name="basePath">Path under which the configuration files can be found.</param>
        </member>
        <member name="M:AutocontrolService.Implementation.Config.AutocontrolServiceConfiguration.OnConfigurationFinished">
            <summary>
            Displays the current configuration in the log (and console, if used)
            </summary>
        </member>
        <member name="M:AutocontrolService.Implementation.Config.AutocontrolServiceConfiguration.CreateCommandLineArguments(PlantiT.Base.CommandLineUtils.CommandLineParserBuilder{AutocontrolService.Implementation.Config.AutocontrolServiceSettings})">
            <summary>
            Used to configure command line arguments.
            
            The following arguments are already in use, so use the short or long names in own arguments please:
            Long-Name               Short-Name 
            --Port                  -l
            --projectDirectory      -p 
            --TlsMode               -s
            --SslCertThumbprint     -t
            --UrlPathBase           -u
            --piTReverseProxyPort   -r
            --databaseStorageType   -w
            --databaseServerComputer-x
            --databaseServerInstance-y
            --showPII               -z 
            For descriptions and options of above arguments please refer to the developers-manual.
            </summary>
            <param name="parserBuilder">None of your interest.</param>
        </member>
        <member name="T:AutocontrolService.Implementation.Config.AutocontrolServiceSettings">
            <summary>
            Provides settings for the current Module-Service.
            Populated with values loaded from static files, command line or presets.
            </summary>
        </member>
        <member name="P:AutocontrolService.Implementation.Config.AutocontrolServiceSettings.ExampleSetting">
            <summary>Example setting. Should always have a default value. Referenced to from the Configuration class. Can be deleted once understood.</summary>
        </member>
        <member name="T:AutocontrolService.Implementation.Config.ConfigurationConstants">
            <summary>
            Defines constants that configure the module/service
            </summary>
        </member>
        <member name="F:AutocontrolService.Implementation.Config.ConfigurationConstants.AutocontrolServiceConfigFileName">
            <summary>
            TODO for template-users: a file with the following name must be placed in the config directory of Plant iT base.
            containing a json structure corresponding to the class hirarchy seen in "Settings.cs". Please
            refer to the developer manual for more information about this.
            </summary>
        </member>
        <member name="F:AutocontrolService.Implementation.Config.ConfigurationConstants.ModuleIdentifier">
            <summary>
            This should be set to the techname of the module.
            </summary>
        </member>
        <member name="F:AutocontrolService.Implementation.Config.ConfigurationConstants.ModuleServiceIdentifier">
            <summary>
            Normally, this should be set to the techname of the module-service.
            Will be used from the StartStopLog-Service which log's when this service starts and stops.
            </summary>
        </member>
        <member name="F:AutocontrolService.Implementation.Config.ConfigurationConstants.ConfigSectionName">
            <summary>
            The section name, required for the configuration system to find the 
            correct object for the name of the object in the configuration file
            </summary>
        </member>
        <member name="T:AutocontrolService.Implementation.Controllers.V1.AccessingForeignModuleServicesExampleController">
            <summary>
            An REST-ful api-controller for storing and retrieving the names of guests who visited this instance.
            
            TODO for template-users: This is an example controller and should be removed once understood!
            </summary>
        </member>
        <member name="M:AutocontrolService.Implementation.Controllers.V1.AccessingForeignModuleServicesExampleController.#ctor(PlantiT.Base.Logging.Abstractions.ILogWriter,PlantiT.Base.HttpClientProvider.IHttpClientProvider)">
            <summary>
            Instanciates the controller.
            </summary>
            <param name="httpClientProvider">A provider for tokenized http-clients.</param>
            <param name="log">Required for logging.</param>
        </member>
        <member name="M:AutocontrolService.Implementation.Controllers.V1.AccessingForeignModuleServicesExampleController.ExampleAccessOfOtherModuleService">
            <summary>
            Example method which shows how to use the httpClientProvider
            </summary>
            <returns>Nothing</returns>
        </member>
        <member name="T:AutocontrolService.Implementation.Controllers.V1.AutocontrolController">
            <summary>
            An REST-ful api-controller for storing and retrieving the names of guests who visited this instance.
            </summary>
        </member>
        <member name="M:AutocontrolService.Implementation.Controllers.V1.AutocontrolController.GetAll">
            <summary>
            Gets all entries in the list of guests.
            </summary>
            <returns>The entire list of guests who immortalized themselves in this session.</returns>
        </member>
        <member name="T:AutocontrolService.Implementation.Controllers.V1.GuestsController">
            <summary>
            An REST-ful api-controller for storing and retrieving the names of guests who visited this instance.
            </summary>
        </member>
        <member name="M:AutocontrolService.Implementation.Controllers.V1.GuestsController.#ctor(AutocontrolService.Implementation.BusinessLogic.GuestBook,PlantiT.Base.Logging.Abstractions.ILogWriter)">
            <summary>
            Instantiates the controller.
            </summary>
            <param name="guestBook">The storage resource for adding and retrieving guests.</param>
            <param name="log">Required for logging.</param>
        </member>
        <member name="M:AutocontrolService.Implementation.Controllers.V1.GuestsController.Get">
            <summary>
            Gets all entries in the list of guests.
            </summary>
            <returns>The entire list of guests who immortalized themselves in this session.</returns>
        </member>
        <member name="M:AutocontrolService.Implementation.Controllers.V1.GuestsController.Get(System.Int32)">
            <summary>
            Gets a guest with a specific index on the list.
            </summary>
            <param name="index">The guest in question.</param>
            <returns></returns>
        </member>
        <member name="M:AutocontrolService.Implementation.Controllers.V1.GuestsController.Put(AutocontrolService.Implementation.BusinessLogic.GuestBookEntry)">
            <summary>
            Immortalizes a new guest for the time of this session.
            </summary>
            <param name="entry">The new entry.</param>
        </member>
        <member name="M:AutocontrolService.Implementation.Controllers.V1.GuestsController.Delete(System.Int32)">
            <summary>
            De-immortalizes a guest, a functionality due to popular request.
            </summary>
            <param name="index">The index of the item to be deleted.</param>
        </member>
        <member name="T:AutocontrolService.Implementation.Controllers.V1.ReportController">
            <summary>
            An REST-ful api-controller for storing and retrieving the names of guests who visited this instance.
            </summary>
        </member>
        <member name="M:AutocontrolService.Implementation.Controllers.V1.ReportController.GetLines">
            <summary>
            Get all Lines for lms report
            </summary>
            <returns> </returns>
        </member>
        <member name="M:AutocontrolService.Implementation.Controllers.V1.ReportController.GetHeader(System.Int32)">
            <summary>
            Get Header for specific line for lms report.
            </summary>
            <returns> .</returns>
        </member>
        <member name="M:AutocontrolService.Implementation.Controllers.V1.ReportController.GetProductionInfo(System.Int32)">
            <summary>
            Get Production Info for specific line for lms report.
            </summary>
            <returns> .</returns>
        </member>
        <member name="M:AutocontrolService.Implementation.Controllers.V1.ReportController.GetMachineError(System.Int32)">
            <summary>
            Get Machine Error for specific line for lms report.
            </summary>
            <returns> .</returns>
        </member>
        <member name="M:AutocontrolService.Implementation.Controllers.V1.ReportController.GetMachineError2(System.Int32)">
            <summary>
            Get Machine Error 2 for specific line for lms report.
            </summary>
            <returns> .</returns>
        </member>
        <member name="M:AutocontrolService.Implementation.Controllers.V1.ReportController.GetEfficiency(System.Int32)">
            <summary>
            Get Efficiency by Time for specific line for lms report.
            </summary>
            <returns> .</returns>
        </member>
        <member name="M:AutocontrolService.Implementation.Controllers.V1.ReportController.GetStateGraph(System.Int32)">
            <summary>
            Get Sate Graph for specific line for lms report.
            </summary>
            <returns> .</returns>
        </member>
        <member name="M:AutocontrolService.Implementation.Controllers.V1.ReportController.GetErrorList(System.Int32)">
            <summary>
            Get Sate Graph for specific line for lms report.
            </summary>
            <returns> .</returns>
        </member>
        <member name="T:AutocontrolService.Implementation.Factory">
             <summary>
             All public methods in this class are called by the Host-Application at Startup.
            
             TODO for template-users: Adapt all methods of this Factory to the needs of your Service.
             </summary>
        </member>
        <member name="M:AutocontrolService.Implementation.Factory.AddAutocontrolServiceServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,AutocontrolService.Implementation.Config.AutocontrolServiceSettings)">
            <summary>
            Add all dependency-injection-services ("DI-services") of this module-service
            </summary>
            <returns></returns>
        </member>
        <member name="M:AutocontrolService.Implementation.Factory.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,AutocontrolService.Implementation.Config.AutocontrolServiceSettings,PlantiT.Base.Logging.Configuration.LogConfiguration)">
            <summary>
            Configurations of the Application itself can be customized here.
            </summary>
        </member>
        <member name="P:AutocontrolService.Implementation.Factory.ControllerDocumentation">
             <summary>
             Add each of your controllers here like this:
             yield return new ControllerDocumentation(typeof(ValuesController));
            
             This is required for the included systems "Swashbuckle" and "Swagger".
             These can generate a human friendly API-specification
             which can be reviewed at runtime or used for automatic generation
             of REST-clients.
            
             Please refer to the developers-manual for more details.
             </summary>
        </member>
        <member name="P:AutocontrolService.Implementation.Factory.RequireAuthentication">
            <summary>Set this to true, once secured API's should be accessed (e.g. of other module-services)</summary>
        </member>
        <member name="F:AutocontrolService.Implementation.Factory.ScopesSwaggerMustRequest">
            <summary>
            The scopes (api-names) which are requested by swagger and are required to access
            the module-service's endpoints (controllers).
            </summary>
        </member>
        <member name="M:AutocontrolService.Implementation.Factory.AddAuthenticationConfigurations(Microsoft.Extensions.DependencyInjection.IServiceCollection,AutocontrolService.Implementation.Config.AutocontrolServiceSettings)">
             <summary>
             Configures the authentication-settings in both directions:
             - When THIS module-service sends requests to OTHER module-services.
             - When OTHER module-services send requests to THIS module-service.
            
             For the first case:
               Once you want to access secured API's (e.g. of other module-services)
               this module service must be registered at IdentityProvider with an Id, a Secret and the Scopes
               it wants to access. Afterwards, the Settings used in the AddTokenizedHttpClientProvider... should be
               set according to the credentials which where set at IdentityProvider.
            
             For the latter:
             - the boolean "RequireAuthentication" needs to be set to true
             - the ApiName of this module-service must be registered at Identity-Provider and
             - the ApiName needs to be set below at "options.ApiName = PlantiTBase"
             - all controllers which should receive authenticated requests only must be decorated with the [Authorize] attribute
             </summary>
        </member>
        <member name="M:AutocontrolService.Implementation.Factory.OnShutdown">
            <summary>
            Action that will be preformed on graceful shutdown
            </summary>
        </member>
    </members>
</doc>
